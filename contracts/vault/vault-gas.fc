#pragma version >=0.4.4;
#include "../imports/gas.fc";
#include "constants.fc";

;; DEPOSIT TO STAKE
const VAULT_DEPOSIT_GAS_CONSUMPTION = 20800;
const VAULT_DEPOSIT_IN_FORWARD = 674139;
const VAULT_DEPOSIT_FORWARD_CELL = 60;
const VAULT_DEPOSIT_FORWARD_BIT = 33600;
const VAULT_WALLET_DEPOSIT_GAS_CONSUMPTION = 9165;
const VAULT_WALLET_DEPOSIT_IN_FORWARD_FEE = 10826750;
;; DEPOSIT TO MINT
const VAULT_DEPOSIT_TO_MINT_GAS_CONSUMPTION = 21999;
const VAULT_DEPOSIT_TO_MINT_FORWARD_CELL = 60;
const VAULT_DEPOSIT_TO_MINT_FORWARD_BIT = 33212;
const VAULT_DEPOSIT_TO_MINT_IN_FORWARD = 676272;
const VAULT_WALLET_MINT_GAS_CONSUMPTION = 12323;
const VAULT_WALLET_MINT_IN_FORWARD_FEE = 10908884;
;; UNSTAKE CTON
const VAULT_UNSTAKE_GAS_CONSUMPTION = 21084;
const VAULT_UNSTAKE_FORWARD_CELL = 1;
const VAULT_UNSTAKE_FORWARD_BIT = 787;
const VAULT_UNSTAKE_IN_FORWARD = 676272;
const VAULT_WALLET_UNSTAKE_GAS_CONSUMPTION = 9165;
const VAULT_WALLET_UNSTAKE_IN_FORWARD_FEE = 6752227;
;; STAKE CTON
const VAULT_STAKE_GAS_CONSUMPTION = 27321;
const VAULT_STAKE_FORWARD_CELL = 60;
const VAULT_STAKE_FORWARD_BIT = 32912;
const VAULT_STAKE_IN_FORWARD = 676272;
const VAULT_WALLET_STAKE_GAS_CONSUMPTION = 9001;
const VAULT_WALLET_STAKE_IN_FORWARD_FEE = 10643282;
;; WITHDRAW TON
const VAULT_WITHDRAW_TON_GAS_CONSUMPTION = 23380;
const VAULT_WITHDRAW_TON_FORWARD_CELL = 1;
const VAULT_WITHDRAW_TON_FORWARD_BIT = 260;
const VAULT_WITHDRAW_TON_IN_FORWARD = 540805;
const VAULT_EXECUTE_WITHDRAW_TON_GAS_CONSUMPTION = 12416;
const VAULT_EXECUTE_WITHDRAW_TON_IN_FORWARD = 401870;
const VAULT_WALLET_WITHDRAW_TON_GAS_CONSUMPTION = 9977;
const VAULT_WALLET_WITHDRAW_TON_IN_FORWARD_FEE = 4294799;
;; BORROW
const VAULT_BORROW_GAS_CONSUMPTION = 22317;
const VAULT_BORROW_FORWARD_CELL = 1;
const VAULT_BORROW_FORWARD_BIT = 403;
const VAULT_BORROW_IN_FORWARD = 540805;
const VAULT_WALLET_BORROW_GAS_CONSUMPTION = 19892;
const VAULT_WALLET_BORROW_IN_FORWARD_FEE = 417870 + 908000;
const VAULT_WALLET_BORROW_NOTIFICATION_OUT_FORWARD_FEE = 10000000;
;; REPAY
const VAULT_REPAY_GAS_CONSUMPTION = 20455;
const VAULT_REPAY_FORWARD_CELL = 59;
const VAULT_REPAY_FORWARD_BIT = 32533;
const VAULT_REPAY_IN_FORWARD = 674139;
const VAULT_WALLET_REPAY_GAS_CONSUMPTION = 9758;
const VAULT_WALLET_REPAY_IN_FORWARD_FEE = 10684082;
;; CONVERT
const VAULT_CONVERT_GAS_CONSUMPTION = 24231;
const VAULT_CONVERT_FORWARD_CELL = 1;
const VAULT_CONVERT_FORWARD_BIT = 783;
const VAULT_CONVERT_IN_FORWARD = 674139;
const VAULT_WALLET_REQUEST_CONVERT_GAS_CONSUMPTION = 10606;
const VAULT_WALLET_REQUEST_CONVERT_IN_FORWARD_FEE = 540805 + 1011200;
const VAULT_WALLET_CONVERT_GAS_CONSUMPTION = 12323;
const VAULT_WALLET_CONVERT_IN_FORWARD_FEE = 502138 + 911200;
;; LIQUIDATION 
const VAULT_REQUEST_LIQUIDATION_GAS_CONSUMPTION = 22219;
const VAULT_REQUEST_LIQUIDATION_FORWARD_CELL = 1;
const VAULT_REQUEST_LIQUIDATION_FORWARD_BIT = 511;
const VAULT_REQUEST_LIQUIDATION_IN_FORWARD = 758940;
const VAULT_LIQUIDATION_NOTIFICATION_GAS_CONSUMPTION = 18301;
const VAULT_LIQUIDATION_NOTIFICATION_FORWARD_CELL = 1;
const VAULT_LIQUIDATION_NOTIFICATION_FORWARD_BIT = 292;
const VAULT_LIQUIDATION_NOTIFICATION_IN_FORWARD = 518938;
const VAULT_WALLET_REQUEST_LIQUIDATION_GAS_CONSUMPTION = 9711;
const VAULT_WALLET_REQUEST_LIQUIDATION_IN_FORWARD_FEE = 673872 + 1138400;
const VAULT_WALLET_LIQUIDATION_GAS_CONSUMPTION = 13316;
const VAULT_WALLET_LIQUIDATION_IN_FORWARD_FEE = 429604 + 778400;
const VAULT_WALLET_LIQUIDATION_FINISHED_GAS_CONSUMPTION = 10290;
const VAULT_WALLET_LIQUIDATION_FINISHED_IN_FORWARD_FEE = 371203;
;; FORCED LIQUIDATION 
const VAULT_FORCED_LIQUIDATION_GAS_CONSUMPTION = 21837;
const VAULT_FORCED_LIQUIDATION_FORWARD_CELL = 1;
const VAULT_FORCED_LIQUIDATION_FORWARD_BIT = 476;
const VAULT_FORCED_LIQUIDATION_IN_FORWARD_FEE = 664272;
const VAULT_FORCED_LIQUIDATION_NOTIFICATION_GAS_CONSUMPTION = 15323;
const VAULT_WALLET_FORCED_LIQUIDATION_GAS_CONSUMPTION = 13202;
const VAULT_WALLET_FORCED_LIQUIDATION_IN_FORWARD_FEE = 420270;

;; Returns compute fee so far (including this instruction and gas_will_be_use).
int calc_compute_fee(int gas_will_be_use) impure inline {
    int gas_used = gas_will_be_use
    + 18 ;; gas_used += get_gas_used() => ADD(18 gas)
    + 44; ;; get_compute_fee(gas_used, false); => FALSE(18 gas) + GETGASFEE(26 gas) = 44
    int compute_fee = get_compute_fee(MY_WORKCHAIN, gas_used);
    return compute_fee;
}

int fee_min_jetton() inline {
    return get_amount_mint_token(0, FORWARD_AMOUNT_FEE);
}

;; DEPOSIT TO STAKE
int vault_deposit_fee() inline {
    return calc_compute_fee(VAULT_DEPOSIT_GAS_CONSUMPTION) + get_forward_fee(MY_WORKCHAIN, VAULT_DEPOSIT_FORWARD_BIT, VAULT_DEPOSIT_FORWARD_CELL) + VAULT_DEPOSIT_IN_FORWARD;
}

int vault_wallet_deposit_fee() inline {
    return VAULT_WALLET_MIN_STORAGE_FEE + calc_compute_fee(VAULT_WALLET_DEPOSIT_GAS_CONSUMPTION) + VAULT_WALLET_DEPOSIT_IN_FORWARD_FEE;
}

int vault_deposit_to_mint_fee() inline {
    return calc_compute_fee(VAULT_DEPOSIT_TO_MINT_GAS_CONSUMPTION) + get_forward_fee(MY_WORKCHAIN, VAULT_DEPOSIT_TO_MINT_FORWARD_BIT, VAULT_DEPOSIT_TO_MINT_FORWARD_CELL) + VAULT_DEPOSIT_TO_MINT_IN_FORWARD;
}
;; DEPOSIT TO MINT
int vault_wallet_to_mint_fee() inline {
    return VAULT_WALLET_MIN_STORAGE_FEE + calc_compute_fee(VAULT_WALLET_MINT_GAS_CONSUMPTION) + VAULT_WALLET_MINT_IN_FORWARD_FEE + fee_min_jetton();
}

int vault_unstake_fee() inline {
    return calc_compute_fee(VAULT_UNSTAKE_GAS_CONSUMPTION) + get_forward_fee(MY_WORKCHAIN, VAULT_UNSTAKE_FORWARD_BIT, VAULT_UNSTAKE_FORWARD_CELL) + VAULT_UNSTAKE_IN_FORWARD;
}

int vault_wallet_unstake_fee() inline {
    return VAULT_WALLET_MIN_STORAGE_FEE + calc_compute_fee(VAULT_WALLET_UNSTAKE_GAS_CONSUMPTION) + VAULT_WALLET_UNSTAKE_IN_FORWARD_FEE + fee_min_jetton();
}

int vault_stake_fee() inline {
    return calc_compute_fee(VAULT_STAKE_GAS_CONSUMPTION) + get_forward_fee(MY_WORKCHAIN, VAULT_STAKE_FORWARD_BIT, VAULT_STAKE_FORWARD_CELL) + VAULT_STAKE_IN_FORWARD;
}

int vault_wallet_stake_fee() inline {
    return VAULT_WALLET_MIN_STORAGE_FEE + calc_compute_fee(VAULT_WALLET_STAKE_GAS_CONSUMPTION) + VAULT_WALLET_STAKE_IN_FORWARD_FEE;
}

int vault_withdraw_ton_fee() inline {
    return calc_compute_fee(VAULT_WITHDRAW_TON_GAS_CONSUMPTION) + get_forward_fee(MY_WORKCHAIN, VAULT_WITHDRAW_TON_FORWARD_BIT, VAULT_WITHDRAW_TON_FORWARD_CELL) + VAULT_WITHDRAW_TON_IN_FORWARD;
}
int vault_execute_withdraw_ton_fee() inline {
    return calc_compute_fee(VAULT_EXECUTE_WITHDRAW_TON_GAS_CONSUMPTION) + VAULT_EXECUTE_WITHDRAW_TON_IN_FORWARD;
}

int vault_wallet_withdraw_ton_fee() inline {
    return VAULT_WALLET_MIN_STORAGE_FEE + calc_compute_fee(VAULT_WALLET_WITHDRAW_TON_GAS_CONSUMPTION) + VAULT_WALLET_WITHDRAW_TON_IN_FORWARD_FEE;
}

int vault_borrow_fee() inline {
    return calc_compute_fee(VAULT_BORROW_GAS_CONSUMPTION) + get_forward_fee(MY_WORKCHAIN, VAULT_BORROW_FORWARD_BIT, VAULT_BORROW_FORWARD_CELL) + VAULT_BORROW_IN_FORWARD;
}

int vault_wallet_borrow_fee() inline {
    return VAULT_WALLET_MIN_STORAGE_FEE + calc_compute_fee(VAULT_WALLET_BORROW_GAS_CONSUMPTION) + VAULT_WALLET_BORROW_IN_FORWARD_FEE + fee_min_jetton();
}

int vault_repay_fee() inline {
    return calc_compute_fee(VAULT_REPAY_GAS_CONSUMPTION) + get_forward_fee(MY_WORKCHAIN, VAULT_REPAY_FORWARD_BIT, VAULT_REPAY_FORWARD_CELL) + VAULT_REPAY_IN_FORWARD;
}

int vault_wallet_repay_fee() inline {
    return VAULT_WALLET_MIN_STORAGE_FEE + calc_compute_fee(VAULT_WALLET_REPAY_GAS_CONSUMPTION) + VAULT_WALLET_REPAY_IN_FORWARD_FEE;
}

int vault_convert_fee() inline {
    return calc_compute_fee(VAULT_CONVERT_GAS_CONSUMPTION) + get_forward_fee(MY_WORKCHAIN, VAULT_CONVERT_FORWARD_BIT, VAULT_CONVERT_FORWARD_CELL) + VAULT_CONVERT_IN_FORWARD;
}

int vault_wallet_convert_fee() inline {
    return VAULT_WALLET_MIN_STORAGE_FEE + calc_compute_fee(VAULT_WALLET_CONVERT_GAS_CONSUMPTION) + VAULT_WALLET_CONVERT_IN_FORWARD_FEE + fee_min_jetton();
}

int vault_wallet_request_convert_fee() inline {
    return VAULT_WALLET_MIN_STORAGE_FEE + calc_compute_fee(VAULT_WALLET_REQUEST_CONVERT_GAS_CONSUMPTION) + VAULT_WALLET_REQUEST_CONVERT_IN_FORWARD_FEE;
}

int vault_request_liquidation_fee() inline {
    return calc_compute_fee(VAULT_REQUEST_LIQUIDATION_GAS_CONSUMPTION) + get_forward_fee(MY_WORKCHAIN, VAULT_REQUEST_LIQUIDATION_FORWARD_BIT, VAULT_REQUEST_LIQUIDATION_FORWARD_CELL) + VAULT_REQUEST_LIQUIDATION_IN_FORWARD;
}

int vault_liquidation_notification_fee() inline {
    return calc_compute_fee(VAULT_LIQUIDATION_NOTIFICATION_GAS_CONSUMPTION) + get_forward_fee(MY_WORKCHAIN, VAULT_LIQUIDATION_NOTIFICATION_FORWARD_BIT, VAULT_LIQUIDATION_NOTIFICATION_FORWARD_CELL) + VAULT_LIQUIDATION_NOTIFICATION_IN_FORWARD;
}

int vault_wallet_request_liquidation_fee() inline {
    return VAULT_WALLET_MIN_STORAGE_FEE + calc_compute_fee(VAULT_WALLET_REQUEST_LIQUIDATION_GAS_CONSUMPTION) + VAULT_WALLET_REQUEST_LIQUIDATION_IN_FORWARD_FEE;
}

int vault_wallet_liquidation_fee() inline {
    return VAULT_WALLET_MIN_STORAGE_FEE + calc_compute_fee(VAULT_WALLET_LIQUIDATION_GAS_CONSUMPTION) + VAULT_WALLET_LIQUIDATION_IN_FORWARD_FEE;
}

int vault_wallet_liquidation_finished_fee() inline {
    return VAULT_WALLET_MIN_STORAGE_FEE + calc_compute_fee(VAULT_WALLET_LIQUIDATION_FINISHED_GAS_CONSUMPTION) + VAULT_WALLET_LIQUIDATION_FINISHED_IN_FORWARD_FEE;
}
;; FORCED LIQUIDATION 
int vault_forced_liquidation_fee() inline {
    return calc_compute_fee(VAULT_FORCED_LIQUIDATION_GAS_CONSUMPTION) + get_forward_fee(MY_WORKCHAIN, VAULT_FORCED_LIQUIDATION_FORWARD_BIT, VAULT_FORCED_LIQUIDATION_FORWARD_CELL) + VAULT_FORCED_LIQUIDATION_IN_FORWARD_FEE;
}

int vault_forced_liquidation_notification_fee() inline {
    return calc_compute_fee(VAULT_FORCED_LIQUIDATION_NOTIFICATION_GAS_CONSUMPTION);
}

int vault_wallet_forced_liquidation_notification_fee() inline {
    return VAULT_WALLET_MIN_STORAGE_FEE + calc_compute_fee(VAULT_WALLET_FORCED_LIQUIDATION_GAS_CONSUMPTION) + VAULT_WALLET_FORCED_LIQUIDATION_IN_FORWARD_FEE;
}
